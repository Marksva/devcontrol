generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  phone      String
  email      String
  adress     String?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  userId String? @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])

  tickets Ticket[]
}

model Ticket {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  status      String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  customerId String?   @db.ObjectId
  customer   Customer? @relation(fields: [customerId], references: [id])

  userId String? @db.ObjectId
  User   User?   @relation(fields: [userId], references: [id])
}

model Account {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @db.ObjectId
  provider           String
  providerAccountId  String
  providerType       String? // permite null se não for enviado pelo OAuth
  refreshToken       String?   @db.String
  accessToken        String?   @db.String
  accessTokenExpires DateTime? // pode ser null se o OAuth não fornecer
  createdAt          DateTime? @default(now()) // null permitido, default usado se não enviado
  updatedAt          DateTime? @updatedAt // null permitido para evitar erro do Prisma

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  accessToken  String?  

  user User @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  tickets   Ticket[]
  customers Customer[]
}

model VerificationRequest {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
